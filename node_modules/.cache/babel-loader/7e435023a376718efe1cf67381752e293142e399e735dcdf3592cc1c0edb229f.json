{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React_Projects\\\\Accordion\\\\accordion\\\\src\\\\Accordion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { questions } from \"./api\";\nimport MyAccordion from \"./MyAccordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Accordion = () => {\n  _s();\n  const [data, setData] = useState(questions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map(curr => {\n      const {\n        id\n      } = curr;\n      return /*#__PURE__*/_jsxDEV(MyAccordion, {}, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Accordion, \"CgpsCeNia8A2yZ4947PBZu+Yi2Q=\");\n_c = Accordion;\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["React","useState","questions","MyAccordion","Accordion","data","setData","map","curr","id"],"sources":["C:/Users/DELL/Desktop/React_Projects/Accordion/accordion/src/Accordion.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { questions } from \"./api\";\r\nimport MyAccordion from \"./MyAccordion\";\r\nconst Accordion = () => {\r\n  const [data, setData] = useState(questions);\r\n  return (\r\n    <>\r\n      {data.map((curr) => {\r\n        const { id } = curr;\r\n        return <MyAccordion key={id} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default Accordion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AACxC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAACC,SAAS,CAAC;EAC3C,oBACE;IAAA,UACGG,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAK;MAClB,MAAM;QAAEC;MAAG,CAAC,GAAGD,IAAI;MACnB,oBAAO,QAAC,WAAW,MAAMC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAI;IACjC,CAAC;EAAC,iBACD;AAEP,CAAC;AAAC,GAVIL,SAAS;AAAA,KAATA,SAAS;AAWf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}